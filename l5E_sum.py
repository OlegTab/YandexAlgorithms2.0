'''
E. Сумма трёх
Ограничение времени	15 секунд
Ограничение памяти	256Mb
Ввод	стандартный ввод или threesum.in
Вывод	стандартный вывод или threesum.out
Даны три массива целых чисел A B C и целое число S
Найдите такие i j k, что A[i] + B[j] + C[k] = S.

Формат ввода
На первой строке число
S (1 ≤ S ≤ 10^9). Следующие три строки содержат описание массивов
A, B, C в одинаковом формате: первое число задает длину n
соответствующего массива (1≤n≤15000), затем заданы n целых чисел от
1 до 10^9 — сам массив.
Формат вывода
Если таких i,j,k не существует, выведите единственное число -1.
Иначе выведите на одной строке три числа — i,j,k.
Элементы массивов нумеруются с нуля. Если ответов несколько,
выведите лексикографически минимальный.

Пример 1
Ввод	Вывод
3
2 1 2
2 3 1
2 3 1
0 1 1

Пример 2
Ввод	Вывод
10
1 5
1 4
1 3
-1

Пример 3
Ввод	Вывод
5
4 1 2 3 4
3 5 2 1
4 5 3 2 2

0 1 2

5
10 9 8 7 6 5 4 4 3 2 1
20 9 8 7 6 5 4 4 3 2 1 9 8 7 6 5 4 4 3 2 30
30 9 8 7 6 5 4 4 3 2 1 9 8 7 6 5 4 4 3 2 1 9 8 7 6 5 4 4 3 2 1
'''
def readenum():
    x = list(map(int, input().split()))[1:]
    for i in range(len(x)):
        x[i] = x[i], i
    return x
s = int(input())
a = readenum()
b = readenum()
c = readenum()
a.sort()
b.sort()
c.sort(key= lambda x: (x[0], -x[1]))
i = j = 0
flag = False
while (i < len(a) ):
    k = len(c) - 1
    j = 0
    while (j < len(b) ):
        while (k > 0 ) and (a[i][0] + b[j][0] + c[k][0] > s):
            k -= 1
        if (a[i][0] + b[j][0] + c[k][0] == s) and ((flag == False) or ans > (a[i][1], b[j][1], c[k][1])):
            ans = (a[i][1], b[j][1], c[k][1])
            flag = True
        j += 1
    i += 1
if flag:
    print(*ans)
else:
    print(-1)

'''
5
3 2 1 2
2 1 0
3 2 7 3

4
3 0 3 2
2 5 0
3 3 7 2
'''